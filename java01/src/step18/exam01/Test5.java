package step18.exam01;

public class Test5 {
  public static void main(String[] args) {
    Bucket5 p = new Bucket5();
    p.value = new Float(3.14f);
    // p.value = new java.util.Date();
    // p.value = new String("ohkydoky");


  }
}

/*
이번 프로젝트는 Bucket에 Float 인스턴스만 저장하기로 했다.
물론 개발자의 실수를 방지하도록 문법적으로 막아야 한다.
==해결책?==
Bucket은 Float가 아닌 다른 타입의 인스턴스를 저장할 수 있기 때문에
바람직 하지 않다.
Bucket4는 사용할 수 없다. 왜? Float만 저장가능하도록 작성해놨기 때문이다
Bucket5를 Float 인스턴스만 저장가능하도록 작성해야 한다.
다른 타입의 인스턴스를 저장하려고 할 때 컴파일 오류가 발생하여 개발자가
바로 오류를 확인할 수 있다.
==질문?==
만약 나중에 내가 임의적으로 만든 클래스의 인스턴스를 저장하려 한다면
또 새로운 버킷을 생성해야 하나요?
만약 생성해야 한다면 도대체 얼마나 많은 버킷을 만들어야 하나요?
==답변!==
=>예
=>아주많이
==대안책!==
=>한 개의 클래스를 작성하여 다양한 타입에 대응할 수 있는 문법이 필요
=>"Generic" 등장!!!!!
==설명!==
=>소프트웨어의 규모는 점점 커지고 있다.
=>대단위의 사람들이 함께 같은 소스를 편집하는 경우가 많다.
=>문법을 제대로 사용하는 지 감시하기가 점점 더 힘들어진다.
=>가능한 개발자의 실수를 최대한 막을 수 있는 문법이 필요하다.



*/
