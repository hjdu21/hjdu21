package bitcamp.pms.controller;

import java.sql.Date;
import java.util.List;
import java.util.Scanner;

import bitcamp.pms.annotation.Controller;
import bitcamp.pms.annotation.RequestMapping;
import bitcamp.pms.dao.BoardDao;
import bitcamp.pms.domain.Board;
import bitcamp.pms.util.CommandUtil;

@Controller
@RequestMapping("board/") // 매핑 정보 일부를 선언한다.
public class BoardController {
  BoardDao boardDao;

  public void setBoardDao(BoardDao boardDao) {
    this.boardDao = boardDao;
  }

  @RequestMapping("add.do")
  public void add(Scanner scan) {
    try {
      Board board = new Board();

      System.out.print("제목? ");
      board.setTitle(scan.nextLine());
      System.out.print("내용? ");
      board.setContent(scan.nextLine());
      System.out.print("암호? ");
      board.setPassword(scan.nextLine());
      board.setCreatedDate(new Date(System.currentTimeMillis()));

      if (CommandUtil.confirm(scan, "저장할래?")) {
        boardDao.insert(board);
        System.out.println("저장요놔");
      } else {
        System.out.println("저장취소");
      }
    } catch (Exception e) {
    }

  }

  @RequestMapping("update.do")
  public void update(Scanner scan) {
    try {
      System.out.print("업데이트 번호? ");
      int no = Integer.parseInt(scan.nextLine());

      Board oldboard = boardDao.selectOne(no);
      Board board = new Board();

      System.out.printf("제목?(%s) ", oldboard.getTitle());
      board.setTitle(scan.nextLine());
      System.out.printf("내용?(%s) ", oldboard.getContent());
      board.setContent(scan.nextLine());
      System.out.print("암호? ");
      board.setPassword(scan.nextLine());
      board.setCreatedDate(new Date(System.currentTimeMillis()));

      if (CommandUtil.confirm(scan, "업데이할래?")) {
        boardDao.update(no, board);
        System.out.println("저장완료");
      } else {
        System.out.println("저장취소");
      }
    } catch (IndexOutOfBoundsException e) {

    } catch (Exception e) {
    }

  }

  @RequestMapping("delete.do")
  public void delete(Scanner scan) {
    try {
      System.out.print("삭제 번호? ");
      int no = Integer.parseInt(scan.nextLine());

      if (CommandUtil.confirm(scan, "삭할래?")) {
        boardDao.delete(no);
        System.out.println("tkrwp완료");
      } else {
        System.out.println("삭제취소");
      }
    } catch (IndexOutOfBoundsException e) {

    } catch (Exception e) {
    }

  }

  @RequestMapping("list.do")
  public void list(Scanner scan) {
    try {
      List<Board> list = boardDao.selectList();
      for (int i = 0; i < list.size(); i++) {
        System.out.printf("%d, %s", i, list.get(i));
      }

    } catch (Exception e) {
    }

  }

}
